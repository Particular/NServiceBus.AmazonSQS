name: SQS Transport Cleanup
on:
  schedule:
    - cron: '0 0 * * *' # Runs daily at midnight UTC
  workflow_dispatch:
jobs:
  cleanup:
    runs-on: ubuntu-20.04
    env:
      # The CLEANUP secrets are a limited profile that can only delete certain things
      AWS_ACCESS_KEY_ID: ${{ secrets.CLEANUP_AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.CLEANUP_AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
    steps:
    - name: Output AWS CLI version
      shell: pwsh
      run: aws --version
    - name: Clean up S3 Buckets
      shell: pwsh
      run: |
        $dateFilter = ([System.DateTime]::UtcNow).AddHours(-24)

        Write-Host "Current time $(([System.DateTime]::UtcNow).ToString()) UTC"
        Write-Host "Looking for test buckets older than $($dateFilter.ToString()) UTC starting with 'cli-'"
        
        $bucketList = aws s3api list-buckets | ConvertFrom-Json
        $buckets = $bucketList.Buckets | Where-Object { $_.Name.StartsWith('cli-') } | Where-Object { $_.CreationDate -lt $dateFilter }
        Write-Output "Found $($buckets.length) buckets"
        
        $buckets | ForEach-Object {
          Write-Output "Deleting bucket '$($_.Name)'"
          aws s3api delete-bucket --bucket $_.Name
        }
    - name: Clean up SQS queues
      shell: pwsh
      run: |
        $epoch = Get-Date -Year 1970 -Month 1 -Day 1 -Hour 0 -Minute 0 -Second 0 -Millisecond 0
        $cutoff = $(Get-Date).AddHours(-24)
        
        function DeleteQueues {
            param ( $prefix )

            Write-Output "Deleting queues with prefix '$prefix' created before $cutoff"

            $queueList = aws sqs list-queues --queue-name-prefix $prefix | ConvertFrom-Json
            Write-Output "$($queueList.QueueUrls.length) queues matching '$prefix'"

            $queueList.QueueUrls | ForEach-Object {
                $url = $_
                $details = aws sqs get-queue-attributes --queue-url $url --attribute-names CreatedTimestamp | ConvertFrom-Json
                $epochSeconds = $details.Attributes.CreatedTimestamp
                $created = $epoch.AddSeconds($epochSeconds)

                if ($created -lt $cutoff) {
                    Write-Output "Deleting $url created $created"
                    aws sqs delete-queue --queue-url $url
                } else {
                    Write-Output "Skipping $url created $created"
                }
            }
        }
        
        # Prefix GHA-{github.run_id} used by ServiceControl
        DeleteQueues 'GHA-'
        
        # Prefix AT used by SQS Transport acceptance tests
        DeleteQueues 'AT'
        
        # Prefix TT used by SQS Transport transport tests
        DeleteQueues 'TT'
    - name: Notify Slack on failure
      if: ${{ failure() }}
      shell: pwsh
      run: |
          $headers = @{
              'Authorization' = "Bearer ${{ secrets.SLACK_TOKEN }}"
          }
          $body = @{
            channel = 'aws'
            text = "NServiceBus.AmazonSQS clean up has failed: https://github.com/Particular/NServiceBus.AmazonSQS/actions/workflows/tests-cleanup.yml"
            username = 'Amazon SQS Transport Test Cleanup'
            icon_emoji = 'github_actions'
            unfurl_links = false
            unfurl_media = false
          } | ConvertTo-Json
          $result = Invoke-RestMethod -Method POST -Uri https://slack.com/api/chat.postMessage -ContentType "application/json; charset=utf-8" -Headers $headers -Body $body
          Write-Output $result
          exit $(If ($result.ok) { 0 } Else { 1 })
